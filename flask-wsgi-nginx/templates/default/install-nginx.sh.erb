<% if node["flask-wsgi-nginx"]["nginx"]["enable_sse"] %>
NGINX_PUSH_STREAM_MODULE_PATH=~/nginx-push-stream-module
# clone the project
git clone https://github.com/wandenberg/nginx-push-stream-module.git NGINX_PUSH_STREAM_MODULE_PATH
<% end %>

# get desired nginx version (nginx-push-stream-module works with 1.2.0+)
wget http://nginx.org/download/nginx-<%= node["flask-wsgi-nginx"]["nginx"]["version"] %>.tar.gz && tar xzvf nginx-<%= node["flask-wsgi-nginx"]["nginx"]["version"] %>.tar.gz

# PCRE version 4.4 - 8.40
wget https://ftp.pcre.org/pub/pcre/pcre-8.40.tar.gz && tar xzvf pcre-8.40.tar.gz

# zlib version 1.1.3 - 1.2.11
wget http://www.zlib.net/zlib-1.2.11.tar.gz && tar xzvf zlib-1.2.11.tar.gz

# OpenSSL version 1.0.2 - 1.1.0
wget https://www.openssl.org/source/openssl-1.1.0f.tar.gz && tar xzvf openssl-1.1.0f.tar.gz

# Remove all .tar.gz files. We don't need them anymore
rm -rf *.tar.gz

# configure and build
cd nginx-<%= node["flask-wsgi-nginx"]["nginx"]["version"] %>
./configure --prefix=/etc/nginx \
            --sbin-path=/usr/sbin/nginx \
            --modules-path=/usr/lib64/nginx/modules \
            --conf-path=/etc/nginx/nginx.conf \
            --error-log-path=/var/log/nginx/error.log \
            --pid-path=/var/run/nginx.pid \
            --lock-path=/var/run/nginx.lock \
            --user=nginx \
            --group=nginx \
            --build=CentOS \
            --builddir=nginx-1.13.2 \
            --with-select_module \
            --with-poll_module \
            --with-threads \
            --with-file-aio \
            --with-http_ssl_module \
            --with-http_v2_module \
            --with-http_realip_module \
            --with-http_addition_module \
            --with-http_xslt_module=dynamic \
            --with-http_image_filter_module=dynamic \
            --with-http_geoip_module=dynamic \
            --with-http_sub_module \
            --with-http_dav_module \
            --with-http_flv_module \
            --with-http_mp4_module \
            --with-http_gunzip_module \
            --with-http_gzip_static_module \
            --with-http_auth_request_module \
            --with-http_random_index_module \
            --with-http_secure_link_module \
            --with-http_degradation_module \
            --with-http_slice_module \
            --with-http_stub_status_module \
            --http-log-path=/var/log/nginx/access.log \
            --http-client-body-temp-path=/var/cache/nginx/client_temp \
            --http-proxy-temp-path=/var/cache/nginx/proxy_temp \
            --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp \
            --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \
            --http-scgi-temp-path=/var/cache/nginx/scgi_temp \
            --with-mail=dynamic \
            --with-mail_ssl_module \
            --with-stream=dynamic \
            --with-stream_ssl_module \
            --with-stream_realip_module \
            --with-stream_geoip_module=dynamic \
            --with-stream_ssl_preread_module \
            --with-compat \
            --with-pcre=../pcre-8.40 \
            --with-pcre-jit \
            --with-zlib=../zlib-1.2.11 \
            --with-openssl=../openssl-1.1.0f \
            --with-openssl-opt=no-nextprotoneg \
            --with-debug
            <% if node["flask-wsgi-nginx"]["nginx"]["enable_sse"] %>--add-module=$NGINX_PUSH_STREAM_MODULE_PATH<% end %>
make

# install and finish
make install

# Create the NGINX system user and group
sudo useradd --system --home /var/cache/nginx --shell /sbin/nologin --comment "nginx user" --user-group nginx

# check
nginx -v
    nginx version: nginx/<%= node["flask-wsgi-nginx"]["nginx"]["version"] %>
nginx -t

<% if node["flask-wsgi-nginx"]["nginx"]["enable_sse"] %>
# test configuration
nginx -c $NGINX_PUSH_STREAM_MODULE_PATH/misc/nginx.conf -t
    the configuration file $NGINX_PUSH_STREAM_MODULE_PATH/misc/nginx.conf syntax is ok
    configuration file $NGINX_PUSH_STREAM_MODULE_PATH/misc/nginx.conf test is successful
<% end %>

# clean up
cd -
rm -r nginx-<%= node["flask-wsgi-nginx"]["nginx"]["version"] %>/ openssl-1.1.0f/ pcre-8.40/ zlib-1.2.11/

# Remove archaic files from the /etc/nginx directory
rm /etc/nginx/koi-utf /etc/nginx/koi-win /etc/nginx/win-utf

# Remove all .default backup files from /etc/nginx/
rm /etc/nginx/*.default
